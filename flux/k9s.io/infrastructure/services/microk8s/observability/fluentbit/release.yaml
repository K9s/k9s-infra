apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: fluent-bit
  annotations:
    kustomize.toolkit.fluxcd.io/substitute: disabled
spec:
  interval: 10m
  chart:
    spec:
      version: 0.40.0
      chart: fluent-bit
      sourceRef:
        kind: HelmRepository
        name: fluent
      interval: 1m
  install:
    crds: CreateReplace
  upgrade:
    crds: CreateReplace
  values:
    logLevel: info

    dashboards:
      enabled: true

    serviceMonitor:
      enabled: true

    rbac:
      create: true
      nodeAccess: true
      eventsAccess: true

    service:
      annotations:
        prometheus.io/path: "/api/v1/metrics/prometheus"
        prometheus.io/port: "2020"
        prometheus.io/scrape: "true"

    config:
      service: |
        [SERVICE]
            Flush                               {{ .Values.flush }}
            Log_Level                           {{ .Values.logLevel }}
            Grace                               20
            Daemon                              off
            Parsers_File                        custom_parsers.conf
            HTTP_Server                         On
            HTTP_Listen                         0.0.0.0
            HTTP_Port                           {{ .Values.metricsPort }}
            Health_Check                        On
            HC_Errors_Count                     5
            HC_Retry_Failure_Count              5
            HC_Period                           5
            storage.metrics                     true
            storage.path                        /var/log/flb_buffer
            storage.pause_on_chunks_overlimit   On
            storage.max_chunks_up               128
            storage.total_limit_size            1G
            scheduler.cap                       600

      ## https://docs.fluentbit.io/manual/pipeline/inputs
      inputs: |
        [INPUT]
            Name                  tail
            Alias                 in.kube.containers.cluster
            Tag                   in.kube.containers.cluster.*
            Path                  /var/log/containers/*.log
            Parser                cri
            multiline.parser      docker, cri
            DB                    /var/log/flb_kube_containers.db
            DB.locking            On
            storage.type          memory
            Mem_Buf_Limit         50MB
            Buffer_Chunk_Size     256k
            Buffer_Max_Size       10M
            Skip_Long_Lines       On
            Skip_Empty_Lines      On
            Refresh_Interval      2
        
        [INPUT]
            Name                  tail
            Alias                 in.host.auth.log.local
            Tag                   in.host.auth.log.local
            Path                  /var/log/auth.log
            DB                    /var/log/flb_host_auth_log.db
            DB.locking            On
            storage.type          memory
            Mem_Buf_Limit         50MB
            Buffer_Chunk_Size     256k
            Buffer_Max_Size       10M
            Skip_Empty_Lines      On
            Refresh_Interval      2

        [INPUT]
            Name                  systemd
            Alias                 in.host.systemd.unit
            Tag                   in.host.systemd.unit.*
            Systemd_Filter        _SYSTEMD_UNIT=snap.microk8s.daemon-apiserver-kicker.service
            Systemd_Filter        _SYSTEMD_UNIT=snap.microk8s.daemon-apiserver-proxy.service
            Systemd_Filter        _SYSTEMD_UNIT=snap.microk8s.daemon-cluster-agent.service
            Systemd_Filter        _SYSTEMD_UNIT=snap.microk8s.daemon-containerd.service
            Systemd_Filter        _SYSTEMD_UNIT=snap.microk8s.daemon-etcd.service
            Systemd_Filter        _SYSTEMD_UNIT=snap.microk8s.daemon-k8s-dqlite.service
            Systemd_Filter        _SYSTEMD_UNIT=snap.microk8s.daemon-kubelite.service
            Systemd_Filter        _SYSTEMD_UNIT=ssh.service
            Systemd_Filter        _SYSTEMD_UNIT=fstrim.service
            Systemd_Filter        _SYSTEMD_UNIT=iscsid.service
            DB                    /var/log/flb_host_systemd.db
            Lowercase             On
            storage.type          memory
            Mem_Buf_Limit         50MB
            Strip_Underscores     On

        [INPUT]
            name                  kubernetes_events
            tag                   in.kube.events.cluster
            kube_url              https://kubernetes.default.svc:443
            kube_ca_file          /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
            kube_token_file       /var/run/secrets/kubernetes.io/serviceaccount/token
            db                    /var/log/flb_kube_events.db
            storage.type          memory
            Mem_Buf_Limit         50MB

      ## https://docs.fluentbit.io/manual/pipeline/filters
      filters: |        
        [FILTER]
            Name                  throttle
            Alias                 throttle.fluent-bit
            Match                 in.kube.containers.observability.fluent-bit.*
            Rate                  2
            Window                1
            Interval              1s
        
        # Kubernetes
        [FILTER]
            Name                  kubernetes
            Alias                 in.kube.containers.cluster
            Match                 in.kube.containers.cluster.*
            Kube_URL              https://kubernetes.default.svc:443
            Kube_CA_File          /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
            Kube_Token_File       /var/run/secrets/kubernetes.io/serviceaccount/token
            Kube_Tag_Prefix       in.kube.containers.cluster.var.log.containers.
            Merge_Log             Off
            Buffer_Size           0
            K8S-Logging.Parser    On
            K8S-Logging.Exclude   On
            Annotations           On
            Labels                Off
        
        [FILTER]
            Name                  nest
            Alias                 lift.kube.containers
            Match                 in.kube.containers.cluster.*
            Operation             lift
            Nested_under          kubernetes
            Add_prefix            kubernetes_
        
        [FILTER]
            Name                  nest
            Alias                 lift.kube.containers.labels
            Match                 in.kube.containers.cluster.*
            Operation             lift
            Nested_under          kubernetes_labels
            Add_prefix            kubernetes_labels/
        
        [FILTER]
            Name                  nest
            Alias                 lift.kube.containers.annotations
            Match                 in.kube.containers.cluster.*
            Operation             lift
            Nested_under          kubernetes_annotations
            Add_prefix            kubernetes_annotations/
        
        [FILTER]
            Name                  lua
            Alias                 lua.kubernetes_namespace_container_name
            Match                 in.kube.containers.cluster.*
            script                /fluent-bit/scripts/sanitize_records.lua
            call                  kubernetes_namespace_container_name
            enable_flb_null       On
        
        [FILTER]
            Name                  nest
            Alias                 lift.kube.events.metadata
            Match                 in.kube.events.cluster
            Operation             lift
            Nested_under          metadata
            Add_prefix            metadata/

        # Rewrite Tag for in.* for better tag naming

        [FILTER]
            Name                  record_modifier
            Alias                 in.set._flb_id
            Match                 in.*
            Uuid_key              _flb_id
        
        [FILTER]
            Name                  rewrite_tag
            Alias                 in.kube.containers
            Emitter_Name          in.kube.containers
            Match                 in.kube.containers.cluster.*
            Rule                  $_flb_id ^. in.kube.containers.$kubernetes_namespace_name.$kubernetes_container_name.$kubernetes_pod_name false
        
        [FILTER]
            Name                  rewrite_tag
            Alias                 in.host.systemd
            Emitter_Name          in.host.systemd
            Match                 in.host.systemd.unit.*
            Rule                  $_flb_id ^. in.host.systemd.$syslog_identifier.$hostname false
        
        [FILTER]
            Name                  rewrite_tag
            Alias                 in.kube.events
            Emitter_Name          in.kube.events
            Match                 in.kube.events.cluster
            Rule                  $_flb_id ^. in.kube.events.$type.$reason.$action false
        
        [FILTER]
            Name                  modify
            Alias                 structured.rename.message.msg
            Match                 structured.*
            Rename                message   msg
            Rename                MESSAGE   msg
        
        [FILTER]
            Name                  lua
            Alias                 flb_tags
            Match                 *
            script                /fluent-bit/scripts/sanitize_records.lua
            call                  flb_tags
            type_array_key        _flb_tags _flb_processed _flb_parsed
            enable_flb_null       On
        
        [FILTER]
            Name                  modify
            Alias                 structured.rename.msg.log
            Match                 structured.*
            Rename                msg       log
        
        # Raw Logs
        [FILTER]
            Name                  rewrite_tag
            Alias                 raw.ingest
            Emitter_Name          raw.ingest
            Match                 in.*
            Rule                  $_flb_id ^. raw.ingest.$TAG[1].$TAG[2].$TAG[3].$TAG[4].$TAG[5] true
        
        # Structured Logs
        [FILTER]
            Name                  rewrite_tag
            Alias                 structured.ingest
            Emitter_Name          structured.ingest
            Match                 in.*
            Rule                  $_flb_id ^. structured.ingest.$TAG[1].$TAG[2].$TAG[3].$TAG[4].$TAG[5] false
        
        [FILTER]
            Name                  modify
            Alias                 structured.kube.events._flb_processing_status
            Match                 structured.ingest.kube.events.*
            Set                   _flb_processing_status   bypass
        
        [FILTER]
            Name                  modify
            Alias                 structured.cleanup.__flb_log_remaining_last
            Match                 structured.*
            Remove                __flb_log_remaining_last
            Condition             Key_does_not_exist    _flb_log_remaining
        
        [FILTER]
            Name                  modify
            Alias                 structured.set.__flb_log_remaining_last
            Match                 structured.*
            Hard_rename           _flb_log_remaining    __flb_log_remaining_last
        
        [FILTER]
            Name                  modify
            Alias                 structured.copy._raw_log
            Match                 structured.ingest.*
            Copy                  log _raw_log

        [FILTER]
            name                  multiline
            Alias                 structured.multiline
            Emitter_Name          structured.multiline
            match                 structured.ingest.*
            multiline.key_content log
            multiline.parser      cri, docker, go, python, java
            buffer                On
            flush_ms              5000
        
        [FILTER]
            Name                  lua
            Alias                 structured.ingest.multiline.processed
            Match                 structured.ingest.*
            script                /fluent-bit/scripts/sanitize_records.lua
            call                  multiline_processed
        
        [FILTER]
            Name                  rewrite_tag
            Alias                 final-structured-bypass
            Emitter_Name          final-structured-bypass
            Match                 structured.*
            Rule                  $_flb_processing_status bypass final.structured false
        
        [FILTER]
            Name                  parser
            Alias                 structured.parse.auth
            Match                 structured.ingest.host.auth.*
            Key_Name              log
            Reserve_Data          On
            Preserve_Key          Off
            Parser                auth-log
        
        # logfmt is too broad to apply for all logs  https://github.com/fluent/fluent-bit/issues/4927 
        [FILTER]
            Name                  parser
            Alias                 structured.parse.logfmt
            Match                 structured.reprocess.logfmt
            Key_Name              log
            Reserve_Data          On
            Preserve_Key          Off
            Parser                logfmt
        
        [FILTER]
            Name                  parser
            Alias                 structured.parse.simple
            Match                 structured.*
            Key_Name              log
            Reserve_Data          On
            Preserve_Key          Off
            Parser                simple-datetime-log-with-level-and-optional-msg
        
        [FILTER]
            Name                  parser
            Alias                 structured.parse
            Match                 structured.*
            Key_Name              log
            Reserve_Data          On
            Preserve_Key          Off
            Parser                json
            Parser                kube-logs
            Parser                containerd
            Parser                apache_nginx_combined
            Parser                apache_error
            Parser                apache
            Parser                k8s-nginx-ingress
            Parser                kibana-logs
            Parser                simple-datetime-msg-1
            Parser                simple-datetime-msg-2
            Parser                simple-datetime-with-level
            Parser                minecraft-java-msg
            Parser                redis
            Parser                simple-level-msg
        
        [FILTER]
            Name                  parser
            Alias                 structured.parse.greedy-json-msg
            Match                 structured.reprocess.*
            Key_Name              log
            Reserve_Data          On
            Preserve_Key          Off
            Parser                greedy-json-msg
        
        [FILTER]
            Name                  parser
            Alias                 structured.parse.json
            Match                 structured.reprocess.*
            Key_Name              json
            Reserve_Data          On
            Preserve_Key          Off
            Parser                json
        
        [FILTER]
            Name                  modify
            Alias                 structured.rename.level
            Match                 structured.*
            Rename                severity    level
            Rename                log_level   level
            Rename                log.level   level
            Rename                lvl         level
        
        [FILTER]
            Name                  modify
            Alias                 structured.rename.es
            Match                 structured.*
            Rename                @timestamp  _log_timestamp
            Rename                _id         _log_id
            Rename                _index      _log_index
        
        [FILTER]
            Name                  parser
            Alias                 structured.parse.pass-through-msg
            Match                 structured.*
            Key_Name              msg
            Reserve_Data          On
            Preserve_Key          Off
            Parser                pass-through-msg
        
        [FILTER]
            Name                  lua
            Alias                 structured.lua.normalize
            Match                 structured.*
            script                /fluent-bit/scripts/sanitize_records.lua
            call                  normalize
            type_array_key        _flb_rejected_fields
            enable_flb_null       On
        
        # Reprocessing Start
        
        ## Set reprocessing status records
        
        [FILTER]
            Name                  modify
            Alias                 structured.modify.process.ingest
            Match                 structured.ingest.*
            Set                   __flb_last_processed ingest
            Set                   _flb_processed_ingest true
        
        [FILTER]
            Name                  modify
            Alias                 structured.modify.reprocess.logfmt
            Match                 structured.reprocess.logfmt
            Set                   __flb_last_processed logfmt
            Set                   _flb_processed_logfmt true
        
        [FILTER]
            Name                  modify
            Alias                 structured.modify.reprocess.log
            Match                 structured.reprocess.log
            Set                   __flb_last_processed log
            Set                   _flb_processed_log true
        
        [FILTER]
            Name                  modify
            Alias                 structured.modify.reprocess.msg
            Match                 structured.reprocess.msg
            Set                   __flb_last_processed msg
            Set                   _flb_processed_msg true
        
        ## Reprocessing debug
        
        [FILTER]
            Name                  modify
            Alias                 structured.rename.reprocess.log.msg
            Match                 structured.reprocess.msg
            Rename                log   msg
        
        [FILTER]
            Name                  modify
            Alias                 structured.create._flb_log_remaining
            Match                 structured.*
            Hard_copy             msg _flb_log_remaining
            Hard_copy             log _flb_log_remaining
        
        ## Reprocessing rewrite tags
        
        [FILTER]
            Name                  modify
            Alias                 structured.gate.reprocess.log
            Match                 structured.*
            Rename                log message
            Hard_rename           log _log
            Condition             Key_exists  _flb_processed_log

        [FILTER]
            Name                  rewrite_tag
            Alias                 structured.reprocess.log
            Emitter_Name          structured.reprocess.log
            Match                 structured.*
            Rule                  $log ^. structured.reprocess.log false
        
        [FILTER]
            Name                  modify
            Alias                 structured.gate.reprocess.msg
            Match                 structured.*
            Rename                msg message
            Hard_rename           msg _msg
            Condition             Key_exists  _flb_processed_msg
        
        [FILTER]
            Name                  rewrite_tag
            Alias                 structured.reprocess.msg
            Emitter_Name          structured.reprocess.msg
            Match                 structured.*
            Rule                  $msg ^. structured.reprocess.msg false
        
        [FILTER]
            Name                  modify
            Alias                 structured.gate.rename._log.logfmt
            Match                 structured.*
            Rename                message  log
            Rename                _log  log
            Condition             Key_does_not_exist  _flb_processed_logfmt
        
        [FILTER]
            Name                  modify
            Alias                 structured.gate.reprocess.logfmt
            Match                 structured.*
            Rename                log message
            Hard_rename           log _log
            Condition             Key_exists  _flb_processed_logfmt

        [FILTER]
            Name                  rewrite_tag
            Alias                 structured.reprocess.logfmt
            Emitter_Name          structured.reprocess.logfmt
            Match                 structured.*
            Rule                  $log ^(\w+=.+?){2,}$ structured.reprocess.logfmt false
        
        # Reprocessing END

        [FILTER]
            Name                  rewrite_tag
            Alias                 final-structured
            Emitter_Name          final-structured
            Emitter_Storage.type  filesystem
            Match                 structured.*
            Rule                  $_flb_id ^. final.structured false
        
        [FILTER]
            Name                  rewrite_tag
            Alias                 final-raw
            Emitter_Name          final-raw
            Emitter_Storage.type  filesystem
            Match                 raw.*
            Rule                  $_flb_id ^. final.raw false

        [FILTER]
            Name                  modify
            Alias                 structured.rename.log-msg
            Match                 final.structured
            Rename                log     message
            Rename                msg     message
            Rename                _log    message
            Rename                _msg    message
        
        [FILTER]
            Name                  lua
            Alias                 final.structured.lua.set_flb_processing_status
            Match                 final.structured
            script                /fluent-bit/scripts/sanitize_records.lua
            call                  set_flb_processing_status
            enable_flb_null       On

        [FILTER]
            Name                  nest
            Alias                 structured.lift.source
            Match                 final.structured
            Operation             lift
            Nested_under          source
        
        [FILTER]
            Name                  nest
            Alias                 structured.lift.params
            Match                 final.structured
            Operation             lift
            Nested_under          params
            Add_prefix            params/

        [FILTER]
            Name                  nest
            Alias                 structured.lift.httprequest
            Match                 final.structured
            Operation             lift
            Nested_under          httprequest
        
        [FILTER]
            Name                  nest
            Alias                 structured.lift.req
            Match                 final.structured
            Operation             lift
            Nested_under          req
        
        [FILTER]
            Name                  nest
            Alias                 structured.lift.res
            Match                 final.structured
            Operation             lift
            Nested_under          res

        [FILTER]
            Name                  lua
            Alias                 structured.lua.normalize.final
            Match                 final.structured
            script                /fluent-bit/scripts/sanitize_records.lua
            call                  normalize
            type_array_key        _flb_rejected_fields
            enable_flb_null       On
        
        [FILTER]
            Name                  modify
            Alias                 structured.rename.misc
            Match                 final.structured
            Rename                uri               url
            Rename                t                 timestamp
            Rename                ts                timestamp
            Rename                time              timestamp
            Rename                log_timestamp     timestamp
            Rename                status            statuscode
            Rename                code              statuscode
            Rename                requestmethod     method
            Rename                agent             user-agent
            Rename                user_agent        user-agent
            Rename                ua                user-agent
            Rename                useragent         user-agent
            Rename                errors            error
            Rename                err               error
            Rename                host              hostname
            Rename                uname             name
            Hard_copy             metadata/uid      _flb_id
        
        [FILTER]
            Name                  lua
            Alias                 structured.lua.statuscode_level
            Match                 final.structured
            script                /fluent-bit/scripts/sanitize_records.lua
            call                  statuscode_level
            enable_flb_null       On
        
        [FILTER]
            Name                  modify
            Alias                 final.remove.flb.fields
            Match                 final.*
            Remove_wildcard       __flb_
        
        #[FILTER]
        #    Name    grep
        #    Match   *
        ##    Exclude level info
        #    Exclude level debug

      ## https://docs.fluentbit.io/manual/pipeline/outputs
      outputs: |
        [OUTPUT]
            Name                      es
            Alias                     out.es.structured
            Host                      logs-es-http
            Match                     final.structured
            Index                     logs-structured
            Write_Operation           upsert
            Id_Key                    _flb_id
            Suppress_Type_Name        On
            Replace_Dots              On
            Port                      9200
            Time_Key_Nanos            On
            Retry_Limit               10
            tls                       On
            tls.verify                Off
            Trace_Error               On
            Buffer_Size               False
            Workers                   4
        
        [OUTPUT]
            Name                      es
            Alias                     out.es.raw
            Host                      logs-es-http
            Match                     final.raw
            Index                     logs-raw
            Write_Operation           upsert
            Id_Key                    _flb_id
            Suppress_Type_Name        On
            Replace_Dots              On
            Port                      9200
            Time_Key_Nanos            On
            Retry_Limit               10
            tls                       On
            tls.verify                Off
            Trace_Error               On
            Buffer_Size               False
            Workers                   4

      ## https://docs.fluentbit.io/manual/pipeline/parsers
      customParsers: |
        [PARSER]
            Name        simple-datetime-log-with-level-and-optional-msg
            Format      regex
            Regex       ^(?<time>\d*-\d*-\d*.\d*:\d*:\d*\.\d*.) (?<log>.*) (?<level>FATAL|ERROR|WARN|INFO|DEBUG|TRACE|UNKNOWN)(: )?(?<msg>.*)?
            Time_Key    time
            Time_Format %Y-%m-%dT%H:%M:%S.%L%z
        
        [PARSER]
            Name        greedy-json-msg
            Format      regex
            Regex       ^((?<json>{.*})|\[(?<target>[^ ]*)\])(?<msg>.+)?$
        
        [PARSER]
            Name        cri
            Format      regex
            Regex       ^(?<time>[^ ]+) (?<stream>stdout|stderr) (?<logtag>[^ ]*) (?<log>.*)$
            Time_Key    time
            Time_Format %Y-%m-%dT%H:%M:%S.%L%z
        
        [PARSER]
            Name        apache
            Format      regex
            Regex       ^(?<host>[^ ]*) (?<ident>[^ ]*) (?<user>[^ ]*) \[(?<time>[^\]]*)\] "(?<method>\S+)(?: +(?<path>[^\"]*?)(?: +\S*)?)?" (?<code>[^ ]*) (?<size>[^ ]*)(?: "(?<referer>[^\"]*)" "(?<agent>[^\"]*)")?$
            Time_Key    time
            Time_Format %d/%b/%Y:%H:%M:%S %z
        
        # Combined log format, should work for nginx and apache default configurations
        # TODO compression_ratio is not quite working right and/or not all logs put compression_ratio data into this field (ie sometimes this ends up with ip-addresses)
        [PARSER]
            Name        apache_nginx_combined
            Format      regex
            Regex       ^(?<host>[^ ]*) (?<ident>[^ ]*) (?<user>[^ ]*) \[(?<time>[^\]]*)\] "(?<method>\S+)(?: +(?<path>[^ ]*) +\S*)?" (?<code>[^ ]*)\s*(?<size>[^ ]*)(?: "(?<referer>[^\"]*)" "(?<agent>[^\"]*)(" ")?(?<compression_ratio>[^\"]*)")
            Time_Key    time
            Time_Format %d/%b/%Y:%H:%M:%S %z
        
        # TODO Fix this, it 'works' but is bad
        [PARSER]
            Name        apache_error
            Format      regex
            Regex       ^\[[^ ]* (?<time>[^\]]*)\] \[(?<level>[^\]]*)\](?: \[pid (?<pid>[^\]]*)\])?( \[client (?<client>[^\]]*)\])? (?<msg>.*)$
        
        [PARSER]
            # https://rubular.com/r/IhIbCAIs7ImOkc
            Name        k8s-nginx-ingress
            Format      regex
            Regex       ^(?<host>[^ ]*) - (?<user>[^ ]*) \[(?<time>[^\]]*)\] "(?<method>\S+)(?: +(?<path>[^\"]*?)(?: +\S*)?)?" (?<code>[^ ]*)\s*(?<size>[^ ]*) "(?<referer>[^\"]*)" "(?<agent>[^\"]*)" (?<request_length>[^ ]*) (?<request_time>[^ ]*) \[(?<proxy_upstream_name>[^ ]*)\] (\[(?<proxy_alternative_upstream_name>[^ ]*)\] )?(?<upstream_addr>[^ ]*) (?<upstream_response_length>[^ ]*) (?<upstream_response_time>[^ ]*) (?<upstream_status>[^ ]*) (?<reg_id>[^ ]*).*$
            Time_Key    time
            Time_Format %d/%b/%Y:%H:%M:%S %z
        
        [PARSER]
            Name        json
            Format      json
        
        [PARSER]
            Name        logfmt
            Format      logfmt
        
        [PARSER]
            Name        kibana-logs
            Format      regex
            Regex       ^(?<method>POST|GET|PUT|DELETE) (?<endpoint>[^ ]*) (?<code>[^ ]*) (?<latency_ms>[^ ]*)ms| \- (?<size>\d*.\d*|\d*)(?<size_unit>[^ ]*)$
        
        [PARSER]
            # https://rubular.com/r/KKkEvIYKEvj13a
            Name        kube-logs
            Format      regex
            Regex       ^(?<severity>W|I|E|F)+(?<code>\d{4})+\s(?<time>\d*:\d*:\d*\.\d*)\s*(?<pid>[^\]]*)\s(?<file>\w*\.\w*):(?<line>\d*)\](?<msg>.*)$
            Time_Key    time
            Time_Format %H:%M:%S.%L
        
        [PARSER]
            Name        containerd
            Format      regex
            Regex       ^(?<time>[^\]]*) \[(?<level>[A-Z]*)\]\[([^ ]*)\] (?<file>[^ ]*) (?<line>[\d ]*): (?<msg>.*)
            Time_Key    time
            Time_Format %Y-%m-%d %H:%M:%S.%L
        
        [PARSER]
            Name        simple-level-msg
            Format      regex
            Regex       ^#(?<level>.*):(?<msg>.*)$
        
        [PARSER]
            Name        simple-datetime-with-level
            Format      regex
            Regex       ^\[(?<time>\d*-\d*-\d* \d*:\d*:\d*:\d*) (?<level>[^ ]*)\](?<msg>.*)$
            Time_Key    time
            Time_Format %Y-%m-%d %H:%M:%S:%L
        
        [PARSER]
            Name        simple-datetime-msg-1
            Format      regex
            Regex       ^\[(?<time>\d*-\d*-\d* \d*:\d*:\d*)\](?<msg>.*)$
            Time_Key    time
            Time_Format %Y-%m-%d %H:%M:%S
        
        [PARSER]
            Name        simple-datetime-msg-2
            Format      regex
            Regex       ^[\[]?(?<time>\d*\/\d*\/\d* \d*:\d*:\d*)[\]]?(?<msg>.*)$
            Time_Key    time
            Time_Format %Y/%m/%d %H:%M:%S
        
        [PARSER]
            Name        minecraft-java-msg
            Format      regex
            Regex       ^\[(?<time>\d*:\d*:\d*)\] \[(?<thread>[^\]]*)\/(?<level>[^\]]*)\]: (?<msg>.*)?
            Time_Key    time
            Time_Format %H:%M:%S
        
        [PARSER]
            Name   redis
            Format regex
            Regex  ^(?<pid>\d*):(?<role>[\w])\s(?<time>[^ ]*\s*[^ ]* [^ ]*\s[^ ]*)\s(?<level>[^ ]*)\s(?<msg>.*$)
            Time_Key time
            Time_Format %d %b %Y %H:%M:%S.%L
            Types pid:integer role:string msg:string level:string
        
        [PARSER]
            Name    auth-log
            Format  regex
            Regex   ^(?<time>\w+\s+\d+ (\d+:){2}\d+) (?<host>[\S]*) (?<program>[^\[\] ]*)(\[(?<pid>\d*)\])?: (?<msg>.*)$
            Time_Key time
            Time_Format %b %d %H:%M:%S
        
        [PARSER]
            Name                pass-through-msg
            Format              regex
            Regex               ^(?<msg>.*)$
            Decode_Field_As     escaped     msg

    luaScripts:
      sanitize_records.lua: |
        function all_trim(s)
          local from = s:match"^%s*()"
          return from > #s and "" or s:match(".*%S", from)
        end
        
        local function has_value (tab, val)
          for index, value in ipairs(tab) do
            if value == val then
              return true
            end
          end
        
          return false
        end
        
        function multiline_processed(tag, timestamp, record)
          if record["_raw_log"] and record["log"] and record["_raw_log"] ~= record["log"] then
            record["__flb_last_processed"] = "multiline"
            record["_flb_processed_multiline"] = true
            record["_flb_processing_status"] = "bypass"
          end
        
          return 2, timestamp, record
        end
        
        function set_flb_processing_status(tag, timestamp, record)
          -- Set _flb_processing_status field to current state of parsing
          if record["_flb_processing_status"] ~= "bypass" 
                and record["_flb_log_remaining"]
                and record["_raw_log"] ~= nil then
            if record["_flb_log_remaining"] == record["_raw_log"] then
              processing_status = "unparsed"
              record["_flb_log_remaining"] = nil
            else
              if record["_flb_processed"][#record["_flb_processed"]] == "msg" then
                processing_status = "parsed"
                record["_flb_log_remaining"] = nil
              else
                processing_status = "partial"
              end
            end
          else
            processing_status = "parsed"
            record["_flb_log_remaining"] = nil
          end
        
          last_parsed = record["_flb_parsed"][#record["_flb_parsed"]]
          if last_parsed and last_parsed ~= "ingest" and last_parsed ~= "bypass" then
            processing_suffix = ":" .. last_parsed
          else
            processing_suffix = ""
          end 
        
          record["_flb_processing_status"] = processing_status .. processing_suffix
        
          return 2, timestamp, record
        end
        
        function flb_tags(tag, timestamp, record)
          --Ensure needed fields are ready
          if type(record["_flb_processed"]) ~= "table" then record["_flb_processed"] = {} end
          if type(record["_flb_parsed"]) ~= "table" then record["_flb_parsed"] = {} end
          if type(record["_flb_tags"]) ~= "table" then record["_flb_tags"] = {} end
        
          if record["__flb_last_processed"] then
            -- Extend _parsed but only if processing had an effect
            if record["_flb_log_remaining"] == nil or 
                (record["_flb_log_remaining"] ~= record["_raw_log"] and record["__flb_log_remaining_last"] ~= record["_flb_log_remaining"]) then
              table.insert(record["_flb_parsed"], record["__flb_last_processed"])
            end
            table.insert(record["_flb_processed"], record["__flb_last_processed"])
          end
        
          -- Extend _flb_tags field with tag
          local tag = string.lower(tag)
          if has_value(record["_flb_tags"], tag) == false then
            -- Set _parsed and _processed if processing bypassed
            if record["_flb_processing_status"] == "bypass" then
              if #record["_flb_parsed"] == 0 then table.insert(record["_flb_parsed"], "bypass") end
              if #record["_flb_processed"] == 0 then table.insert(record["_flb_processed"], "bypass") end
            end
        
            table.insert(record["_flb_tags"], tag)
          end
        
          return 2, timestamp, record
        end
        
        function statuscode_level(tag, timestamp, record)
          if record["level"] == nil and record["statuscode"] then
            local statuscode = tonumber(record["statuscode"])
            if statuscode then
              if statuscode >= 500 and statuscode < 600 then
                record["level"] = "FATAL"
              elseif statuscode >= 400 then
                record["level"] = "ERROR"
              elseif statuscode >= 300 then
                record["level"] = "WARN"
              elseif statuscode >= 200 then
                record["level"] = "INFO"
              elseif statuscode >= 100 then
                record["level"] = "DEBUG"
              end
            end
          end
        
          return 2, timestamp, record
        end
        
        function kubernetes_namespace_container_name(tag, timestamp, record)
          if record["kubernetes_namespace_name"] and record["kubernetes_container_name"] then
            record["kubernetes_namespace_container_name"] = record["kubernetes_namespace_name"] .. "/" .. record["kubernetes_container_name"]
          else
            record["kubernetes_enrichment_missing"] = true
          end
        
          return 2, timestamp, record
        end
        
        function normalize(tag, timestamp, record)
          local _record = {}
          for field, value in pairs(record) do
            --Normalize field value and ensure basic types are preserved
            if type(value) == "string" then
              value = all_trim(value)
        
              number = tonumber(value)
              if number then
                value = number
              end
        
              if value == "true" then value = true end
              if value == "false" then value = false end
            end
            --Ensure field value is lower() then replace spaces and dots with underscores
            field = string.lower(field):gsub("%s", "_"):gsub("%.", "_")
        
            --Normalize level field value to standard log levels
            if field == "level" then
              value = string.upper(value)
        
              -- Redis log levels https://gist.github.com/jgould22/f42ad756fc07143e2a104d7844f39b12
              if value == "F" then value = "FATAL" end
              if value == "E" or value == "ERR" or value == "EROR" then value = "ERROR" end
              if value == "W" or value == "*" or value == "WARNING" then value = "WARN" end
              if value == "I" or value == "-" then value = "INFO" end
              if value == "D" or value == "." then value = "DEBUG" end
              if value == "T" then value = "TRACE" end
              if value == "#" then value = "NOTICE" end
        
              --Add field if loglevel is not one of the expected values create field for troubleshooting
              if not has_value({'FATAL', 'ERROR', 'WARN', 'INFO', 'DEBUG', 'TRACE', 'UNKNOWN', 'ENGINE', 'CRITICAL', 'NOTICE'}, value) then
                _record["_invalid_level"] = value
                _record["level"] = "INVALID"
              end
            end
        
            --Normalize method field value
            if field == "method" then
              value = string.upper(value)
            end
        
            --Map {} to nil (empty)
            if (type(value) == "table" and next(value) == nil) or value == "{}" then
              value = nil
            end
        
            --Ensure field name has valid name.  If any field is invalid add to _flb_rejected_fields for troubleshooting
            if field:match("^[a-zA-Z_][a-zA-Z0-9_%-\\/]*$") then
              _record[field] = value
            else
              if type(_record["_flb_rejected_fields"]) ~= "table" then _record["_flb_rejected_fields"] = {} end
              table.insert(_record["_flb_rejected_fields"], field)
            end
        
            --print("field:", field, "Value:", _record[field], "Value:", type(_record[field]))
          end
        
          --_record["_ingest_timestamp"] = os.time(os.date("!*t"))
        
          return 2, timestamp, _record
        end
