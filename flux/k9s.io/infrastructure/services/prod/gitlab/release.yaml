apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: gitlab
spec:
  interval: 10s
  chart:
    spec:
      version: 6.7.5
      chart: gitlab
      sourceRef:
        kind: HelmRepository
        name: gitlab
      interval: 1m
  install:
    crds: CreateReplace
  upgrade:
    crds: CreateReplace
  timeout: 30m
  values:
    global:
      edition: ce
      hosts:
        domain: gitlab.${environment}.${domain}
        gitlab:
          name: gitlab.${environment}.${domain}
      ingress:
        configureCertmanager: false
        class: gitlab-nginx
        annotations:
          kubernetes.io/tls-acme: "true"
      pages:
        enabled: true
      appConfig:
        lfs:
          enabled: true
        artifacts:
          enabled: true
        uploads:
          enabled: true
        packages:
          enabled: true
        externalDiffs:
          enabled: true
        terraformState:
          enabled: true
        ciSecureFiles:
          enabled: true
        dependencyProxy:
          enabled: true

    nginx-ingress:
      ingressClassByName: true

    certmanager:
      install: false

    gitlab:
      webservice:
        ingress:
          tls:
            secretName: gitlab-tls
        minReplicas: 2
      sidekiq:
        minReplicas: 2
      kas:
        ingress:
          tls:
            secretName: kas-tls
      gitlab-pages:
        ingress:
          tls:
            secretName: pages-star-tls

    registry:
      hpa:
        minReplicas: 2
      ingress:
        tls:
          secretName: registry-tls

    minio:
      persistence:
        storageClass: rbd
        size: 100Gi
      ingress:
        tls:
          secretName: minio-tls

    prometheus:
      install: false

    gitlab-runner:
      install: true
      rbac:
        clusterWideAccess: true
        create: true
      concurrent: 50
      checkInterval: 1
      logFormat: json
      runners:
        privileged: true
        locked: false
        config: |
          [[runners]]
            pre_clone_script = '''
              ##### Runner pre_clone_script #####
              cat /etc/resolv.conf | sed -r "s/^(options.*)/#\1/" > /tmp/resolv && cat /tmp/resolv > /etc/resolv.conf
            '''

            [runners.kubernetes]
              request_concurrency = 5
              image = "ubuntu:20.04"
              helper_image_flavor = "ubuntu"
              namespace = "ci-builds"
              namespace_overwrite_allowed = "ci-.*"

              # build container
              cpu_request = "250m"
              cpu_limit = "8"
              memory_request = "1Gi"
              memory_limit = "6Gi"

              # service containers
              service_cpu_request = "250m"
              service_cpu_limit = "8"
              service_memory_request = "1Gi"
              service_memory_limit = "6Gi"

              # helper container
              helper_cpu_request = "100m"
              helper_cpu_limit = "250m"
              helper_memory_request = "500m"
              helper_memory_limit = "1Gi"
            [[runners.kubernetes.volumes.empty_dir]]
              name = "docker-certs"
              mount_path = "/certs/client"
              medium = "Memory"
            [[runners.kubernetes.volumes.empty_dir]]
              name = "repo"
              mount_path = "/builds"
              medium = "Memory"
            {{- if .Values.global.minio.enabled }}
            [runners.cache]
              Type = "s3"
              Path = "gitlab-runner"
              Shared = true
              [runners.cache.s3]
                ServerAddress = {{ include "gitlab-runner.cache-tpl.s3ServerAddress" . }}
                BucketName = "runner-cache"
                BucketLocation = "us-east-1"
                Insecure = false
            {{ end }}
      podAnnotations:
        gitlab.com/prometheus_scrape: "true"
        gitlab.com/prometheus_port: 9252
  postRenderers:
    - kustomize:
        patchesStrategicMerge:
          - apiVersion: networking.k8s.io/v1
            kind: Ingress
            metadata:
              name: gitlab-webservice-default
              namespace: gitlab
            spec:
              ingressClassName: nginx-external-noauth
          - apiVersion: networking.k8s.io/v1
            kind: Ingress
            metadata:
              name: gitlab-gitlab-pages
              namespace: gitlab
            spec:
              ingressClassName: nginx-external-noauth
